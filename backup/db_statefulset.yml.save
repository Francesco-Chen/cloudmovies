---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
spec:
  serviceName: mysql
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
  replicas: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: mysqld
          image: mysql:8.0
          ports:
            - name: mysqld
              containerPort: 27017
              protocol: TCP
          volumeMounts:
            - name: data-db
              mountPath: --- volumeClaimTemplates: - metadata: apiVersion: apps/v1 name: data-db kind: StatefulSet spec: metadata: 
accessModes:
  name: mongo - ReadWriteOnce storageClassName: standard resources: namespace: default requests: labels: storage: 0.5Gi 
    app.kubernetes.io/name: mongo
spec: serviceName: mongo selector: matchLabels: app.kubernetes.io/name: mongo replicas: 3 template: metadata: labels: app.kubernetes.io/name: 
        mongo
    spec: terminationGracePeriodSeconds: 30 containers: - name: mongod image: mongo:4.2 command: - "mongod" - "--wiredTigerCacheSizeGB" - 
            "0.25" - "--bind_ip" - "0.0.0.0" - "--replSet" - "MainRepSet" - "--auth" - "--clusterAuthMode" - "keyFile" - "--keyFile" - 
            "/etc/mongo-secrets/mongo-keyfile" - "--setParameter" - "authenticationMechanisms=SCRAM-SHA-1"
          ports: - name: mongod containerPort: 27017 protocol: TCP volumeMounts: - name: mongo-keyfile readOnly: true mountPath: 
              /etc/mongo-secrets
            - name: data-db mountPath: /data/db volumes: - name: mongo-keyfile secret: secretName: mongo-keyfile defaultMode: 256 
  volumeClaimTemplates: - metadata:
      name: data-db spec: accessModes: - ReadWriteOnce storageClassName: standard resources: requests: storage: 0.5Gi
